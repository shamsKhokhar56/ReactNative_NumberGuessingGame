{"version":3,"sources":["App.js"],"names":["App","btnHandle","e","attempts","state","hint","lower","randomState","prevScore","score","upper","right","start","isNaN","setState","toString","slice","status","StartPage","style","styles","startPage","underlayColor","startButton","onPress","color","fontSize","textAlign","playAgain","Math","floor","random","ScoreBoard","container","borderContainer","innerContainer","statsContainer","statsText","globalLarge","height","width","buttonText","this","upperPart","heading","lowerHeading","lowerText","statsBoard","displayField","upperText","lowerPart","row","global","React","Component","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","maxHeight","Dimensions","get","maxWidth","borderColor","borderRadius","borderWidth","padding","marginVertical","marginTop","marginBottom","paddingHorizontal","marginHorizontal","fontWeight","flexDirection","margin"],"mappings":"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","file":"static/js/app.87cd9b8f.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, TouchableHighlight, Dimensions } from 'react-native';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      upper: '',\n      lower: 0,\n      randomState: Math.floor(Math.random() * 10) + 1,\n      prevScore: 0,\n      score: 0,\n      attempts: 5,\n      status: false,\n      hint: false,\n      right:false,\n      start: true,\n    }\n  }\n  \n  btnHandle = e => {\n    \n    const attempts = this.state.attempts;\n    const hint = this.state.hint;\n    const lower = this.state.lower;\n    const prevScore = this.state.prevScore;\n    const randomState = this.state.randomState;\n    const score = this.state.score;\n    const upper = this.state.upper;\n    const right = this.state.right;\n    const start = this.state.start;\n    \n\n    if(!isNaN(e)){\n      {this.setState({lower:e})}\n      \n    }\n    else if(isNaN(e) && e==='erase'){\n      if(lower !== 0){\n        this.setState({lower: (lower).toString().slice(0, -1) ===''? 0 : (lower).toString().slice(0, -1)})\n      }\n      else {\n        this.setState({lower: 0})\n      }\n    }\n    else if(isNaN(e) && e==='guess'){\n      if(attempts === 1){\n        this.setState({ attempts: 5 })\n\n        this.setState({ lower: 0 })\n        this.setState({ score: 0 })\n        this.setState({ status: false })\n        this.setState({ right: true })\n\n      }\n      else if(attempts > 0){\n        if(lower != randomState){\n          this.setState({ upper: 'Wrong'})\n          this.setState({ lower: 0 })\n          this.setState({ attempts: this.state.attempts - 1 })\n        }\n        else {\n          this.setState({ upper: 'Right' })\n          this.setState({ lower: 0 })\n          if(hint === false){\n            this.setState({ score: 10 })\n          }\n          else {\n            this.setState({ score: 8 })\n          }\n          this.setState({ attempts: 5 })\n          this.setState({ status: true })\n          this.setState({ right: true })\n          // this.setState({  })\n        }\n      }\n\n    }\n    else if(isNaN(e) && e==='hint'){\n      this.setState({ hint: true })\n      if(randomState < 5){\n        this.setState({ upper: 'The number is less than or equal to 5 '})\n      }\n      else {\n        this.setState({ upper: 'The number is greater than or equal to 5 '})\n      }\n    }\n  }\nStartPage = () => {\n  return (\n    <View style={styles.startPage}>\n        <TouchableHighlight underlayColor='green' style={styles.startButton} \n          onPress={() => {this.setState({ right: false, start: false })}}>\n            <Text style={{ color: 'white', fontSize: 40, textAlign: 'center' }}>Start Game</Text>\n        </TouchableHighlight>\n        <StatusBar style=\"auto\"/>\n    </View>\n  )\n}\n\nplayAgain = () => {\n  this.setState({ randomState: Math.floor(Math.random() * 10) + 1 })\n  this.setState({ prevScore: this.state.prevScore + this.state.score })\n  this.setState({ attempts: 5, hint: false,  lower: 0, score: 0, upper: '',  })\n  this.setState({ right: false, start: false }) \n}\n\nScoreBoard = () => {\n  if(this.state.right)\n  return (\n      <View style={[styles.container]}>\n          <View style={[styles.borderContainer,  styles.innerContainer] }>\n              <View style={styles.statsContainer}>\n                  <Text style={[styles.statsText, { color: 'white' } ]}>Number was: </Text>\n                  <Text style={[styles.statsText, { color: 'green' } ]}>{this.state.randomState}</Text>\n              </View>\n              <View style={styles.statsContainer}>\n                  <Text style={[styles.statsText, { color: 'white' } ]}>Game Status: </Text>\n                  <Text style={[styles.statsText, { color: 'green' } ]}>{this.state.status ? 'Win' : 'Lose'}</Text>\n              </View>\n\n              <View style={styles.statsContainer}>\n                  <Text style={[styles.statsText, { color: 'white' } ]}>Hint Used: </Text>\n                  <Text style={[styles.statsText, { color: 'green' } ]}>{this.state.hint ? 'Yes' : 'No'}</Text>\n              </View>\n\n              <View style={styles.statsContainer}>\n                  <Text style={[styles.statsText, { color: 'white' } ]}>Previous Score: </Text>\n                  <Text style={[styles.statsText, { color: 'green' } ]}>{ this.state.prevScore }</Text>\n              </View>\n\n              <View style={styles.statsContainer}>\n                  <Text style={[styles.statsText, { color: 'white' } ]}>Game Score: </Text>\n                  <Text style={[styles.statsText, { color: 'green' } ]}>{this.state.score}</Text>\n              </View>\n              <View style={styles.statsContainer}>\n                  <Text style={[styles.statsText, { color: 'white' } ]}>Total Score: </Text>\n                  <Text style={[styles.statsText, { color: 'green' } ]}>{this.state.prevScore + this.state.score} </Text>\n              </View>\n\n              <TouchableHighlight underlayColor='green' onPress={()=>{ this.playAgain()}}\n                style={[styles.globalLarge, { height: 80, width: '100%' }]} >\n                  <Text style={styles.buttonText} >\n                      Play Again\n                  </Text>\n              </TouchableHighlight>\n          </View>\n          \n          <StatusBar style=\"auto\" />\n      </View>\n  )\n}\n\n  render() {\n  if(!this.state.right && !this.state.start){\n    return (\n      <View style={styles.container}>\n        <View style={styles.borderContainer}>\n          <View style={styles.upperPart}> \n            <Text style={styles.heading}>Guess Game</Text>\n            <Text style={styles.lowerHeading}>Guess the number from 0-10</Text>\n            <View style={styles.lowerText}>\n              <Text style={styles.statsBoard}>Score: <Text style={{ color: 'green', fontSize: 30 }}>{this.state.prevScore}</Text></Text>\n              <Text style={styles.statsBoard}>Attempts Left: <Text style={{ color: 'green', fontSize: 30 }}>{this.state.attempts}</Text></Text> \n            </View>\n          </View>\n\n          <View style={styles.displayField}>\n            <Text style={styles.upperText}>{this.state.upper}</Text>\n            <View style={styles.lowerText}>\n              <Text style={{  fontSize: 30, color:'white' }}>Guess:</Text> \n              <Text style={{  fontSize: 30, color:'green' }}>{this.state.lower}</Text>\n            </View>\n          </View>\n\n          <View style={styles.lowerPart}>\n            <View style={styles.row}>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('7')}>\n                <Text style={styles.buttonText}>7</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('8')}>\n                <Text style={styles.buttonText}>8</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('9')}>\n                <Text style={styles.buttonText}>9</Text>\n              </TouchableHighlight>\n            </View>\n            <View style={styles.row}>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('4')}>\n                <Text style={styles.buttonText}>4</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('5')}>\n                <Text style={styles.buttonText}>5</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('6')}>\n                <Text style={styles.buttonText}>6</Text>\n              </TouchableHighlight>\n            </View>\n            <View style={styles.row}>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('1')}>\n                <Text style={styles.buttonText}>1</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('2')}>\n                <Text style={styles.buttonText}>2</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('3')}>\n                <Text style={styles.buttonText}>3</Text>\n              </TouchableHighlight>\n            </View>\n            <View style={styles.row}>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('0')}>\n                <Text style={styles.buttonText}>0</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('hint')}>\n                <Text style={styles.buttonText}>Hint</Text>\n              </TouchableHighlight>\n              <TouchableHighlight underlayColor='green' style={styles.global} onPress={() => this.btnHandle('erase')}>\n                <Text style={styles.buttonText}>clear</Text>\n              </TouchableHighlight>\n            </View>\n            <View style={styles.row}>\n              <TouchableHighlight underlayColor='green' style={styles.globalLarge} onPress={() => this.btnHandle('guess')}>\n                <Text style={styles.buttonText}>Guess</Text>\n              </TouchableHighlight>\n            </View>\n          </View>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>)}\n    else if(this.state.start && !this.state.right){\n      return(this.StartPage())\n    }\n    else{\n      return(this.ScoreBoard())\n    }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    startPage: {\n      flex: 1,\n      backgroundColor: 'black',\n      color: 'green',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxHeight: Dimensions.get('screen').height,\n      maxWidth: 500\n    },\n    startButton: {\n      backgroundColor: 'black',\n      borderColor: 'green',\n      borderRadius: 20,\n      borderWidth: 3,\n      padding: 20,\n      marginVertical: 10\n  \n    },\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: 'black',\n      color: 'blue',\n      justifyContent: 'center',\n      maxHeight: Dimensions.get('screen').height,\n      maxWidth: 500\n  \n    },\n  \n    borderContainer: {\n      height: Dimensions.get('screen').height*0.88,\n      width: '100%',\n      backgroundColor: 'black',\n    },\n    upperPart: {\n      flex: 0.23,\n      height: Dimensions.get('screen').height*0.15,\n      justifyContent: 'center'\n    },\n    lowerPart: {\n      flex: 0.6,\n      marginTop: 10,\n      maxHeight: Dimensions.get('screen').height*0.51,\n      justifyContent: 'center'\n    },\n  \n    heading: {\n      color: 'white',\n      fontSize: 30,\n      marginVertical: 5,\n      textAlign: 'center',\n    },\n    lowerHeading: {\n      color: 'white',\n      textAlign: 'center',\n      fontSize: 20,\n      marginBottom: 8,\n    },\n    statsBoard: {\n      fontSize: 20,\n      color:'white', \n      paddingHorizontal: 20,\n    },\n    \n    displayField: {\n      flex: 0.2,\n      borderColor: 'green',\n      borderWidth: 4,\n      borderRadius: 5,\n      height: Dimensions.get('screen').height*0.15, \n      // width: Dimensions.get('screen').width-30,\n      justifyContent: 'space-around',\n      marginHorizontal: 15,\n      paddingHorizontal: 8,\n    }, \n    \n    upperText: {\n      backgroundColor: 'black',\n      color: 'white',\n      height: Dimensions.get('screen').height*0.1,\n      fontSize: 25,\n      paddingHorizontal: 10,\n      textAlign: 'center',\n      fontWeight: 'bold',\n    },\n    \n    lowerText: {\n      color: 'white',\n      backgroundColor: 'black', \n      flexDirection:'row',\n      justifyContent:'space-between'\n    },\n    row: {\n      color: 'white',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      margin: 5\n    },\n    global: {\n      alignItems:'center',\n      backgroundColor: 'black',\n      borderColor: 'green',\n      borderRadius: 50,\n      borderWidth: 4,\n      color: 'white',\n      justifyContent: 'center',\n      height: Dimensions.get('screen').height*0.09,\n      width: '20%',\n    },\n    globalLarge: {\n      alignItems: 'center',\n      backgroundColor: 'black',\n      borderColor: 'green',\n      borderRadius: 30,\n      borderWidth: 4,\n      justifyContent: 'center',\n      marginTop: 10,\n      width: '80%',\n      height: Dimensions.get('screen').height*0.08\n    },\n    buttonText: {\n      color: 'white',\n      fontSize: 25,\n    },\n    innerContainer: {\n      backgroundColor: 'black',\n      height: '96%',\n      justifyContent: 'center',\n      marginTop: 40,\n      paddingHorizontal: 30, \n      width: '100%',\n    },\n    statsContainer: {\n        color: 'white',\n        backgroundColor: 'black',\n        borderColor: 'white',\n        borderWidth: 1, \n        flexDirection:'row',\n        justifyContent:'space-between',\n        margin: 3,\n        paddingHorizontal: 10,\n    },\n    statsText: {\n        backgroundColor: 'black',\n        fontSize: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 3,\n        padding: 10, \n        \n    },\n  \n  });\n\nexport default App;\n"],"sourceRoot":""}